const jwt = require('jsonwebtoken');

const User = require('../models/user.js');
const secretKey = "AmitKumar";

/* 
1 check token present or not
2 check jwt is generated by our web app
3 check token is expriry or not
4 get the user token match with db token
*/
const authMiddleware =async (req, res, next) => {
    const token = req.headers.authorization;

    // check token present or not
    if (!token) {
        return res.status(401).json({
            status: false,
            message: "token is required",
        });
    }

    // verify token validity
    try {
        jwt.verify(token, secretKey);
    } catch (e) {
        return res.status(400).json({
            status: false,
            message: "token is invalid"
        })
    }

    // check expiry time
    const decordedToken = jwt.decode(token)
   
    const now = Math.floor(Date.now() / 1000)
    if (now >decordedToken.exp ) {
        return res.status(400).json({
            status: false,
            message: "token expired please relogin"
        })
    }

    //
    const user=await User.findById(decordedToken._id);
    if(user.token!==token){
        return res.status(401).json({
            status:false,
            message:"Invalid JWT",
        })
    }
    req.user=user;

    next();
}
module.exports = authMiddleware;